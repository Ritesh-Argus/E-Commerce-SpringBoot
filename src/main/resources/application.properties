# Core Application
spring.application.name=demo
server.port=9090
# Database Configuration (H2)
spring.datasource.url=jdbc:h2:mem:test
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.h2.console.enabled=true
# Spring Security OAuth2 with Google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.client-authentication-method=client_secret_basic
spring.security.oauth2.client.registration.google.client-name=Google
# JWT / JWE Configuration
app.jwt.access-token-expiration=900000    # 15 min
app.jwt.refresh-token-expiration=604800000 # 7 days
app.jwt.issuer=com.ecommerce
app.jwt.access-token-ttl-seconds=900
app.jwt.refresh-token-ttl-seconds=1209600
# Frontend URL
app.frontend.url=http://localhost:4200
# keys (classpath path to PEM files)
app.keys.private-key=classpath:keys/private.pem
app.keys.public-key=classpath:keys/public.pem
# Refresh Cookie
app.refresh.cookie-name=REFRESH-TOKEN
app.refresh.cookie-secure=false
app.refresh.cookie-path=/
app.refresh.cookie-sameSite=Lax
# For dev only: allow insecure cookie (app.refresh.cookie-secure=false)
